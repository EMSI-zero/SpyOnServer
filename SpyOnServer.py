import discord
from discord.ext import commands
import random


class player:
    
    def __init__(self, name):
        self.name = name
        self.wins = 0
        self.spy = False
        self.suspicions = 0
        self.vote = False

    #adds to players wins for scoreboard
    def wins(self):
        self.wins += 1

    #reinitiates player spy status
    def replay(self):
        self.spy = False

    #sets the player as the spy
    def setSpy(self):
        self.spy = True    

class Game:
    def __init__(self):
        self.GameStarted = False
        self.players = {}
        self.gameMessage = None
        self.startMessage = None
        self.channel = None
        self.votes = {}
        
    async def addPlayer(self, member):
        self.players[member] = player(member.name)
        print('player is added')

    async def removePlayer(self , member):
        self.players.pop(member)
        print('player is removed')


#creates the client
client = commands.Bot(command_prefix='/')

# a dictionary of games
games = {}


async def callStartMessage(game):
    channel = game.channel
    game.startMessage = await channel.send('Are you ready, Agent?!')
    await game.startMessage.add_reaction('‚ûï')
    # await game.startMessage.add_reaction('‚ûñ')

#This event makes sure that the bot is online
@client.event
async def on_ready():
    print('Bot is online!')
    


@client.event
async def on_raw_reaction_add(payload):
    guild = await client.fetch_guild(payload.guild_id)
    game = games[guild]
    channel = await client.fetch_channel(payload.channel_id)
    message = await channel.fetch_message(payload.message_id)
    member = await client.fetch_user(payload.user_id)
    reaction = payload.emoji
    print('reaction added')
    if message.id == game.startMessage.id :
        print(member.name)
        if not member.bot:
            print('player is adding')
            await game.addPlayer(member)
        else:
            print('this player is a bot!!!!')
    
    elif message.id == game.gameMessage.id :
        if not member.bot and not game.players[member].vote :
            game.votes[reaction.name].suspicions += 1
            print(game.votes[reaction.name].name + f'{game.votes[reaction.name].suspicions}')
            game.players[member].vote = True
        elif not member.bot and game.players[member].vote :
            for reactionCnt in message.reactions :
                if reactionCnt.emoji != reaction.name:
                    await message.remove_reaction(reactionCnt , member)
            

@client.event
async def on_raw_reaction_remove(payload):
    guild = await client.fetch_guild(payload.guild_id)
    game = games[guild]
    channel = await client.fetch_channel(payload.channel_id)
    message = await channel.fetch_message(payload.message_id)
    member = await client.fetch_user(payload.user_id)
    reaction = payload.emoji
    if message.id == game.startMessage.id :
        print(member.name)
        if not member.bot:
            print('player is removing')
            await game.removePlayer(member)
        else:
            print('this player is a bot!!!!')
    
    elif message.id == game.gameMessage.id :
        game.votes[reaction.name].suspicions -= 1
        print(game.votes[reaction.name].name + f'{game.votes[reaction.name].suspicions}')
        game.players[member].vote = False
            


# makes the bot ready
@client.command()
async def SpyOnServer(ctx):
    guild = ctx.message.guild
    game = Game()
    games[guild] = game
    game.channel = await guild.create_text_channel('Top Secret Channel')
    everyoneRole = guild.get_role(guild.id)
    await game.channel.set_permissions(everyoneRole , read_messages = True , send_messages = False)
    await callStartMessage(game)


#Starts the Game
@client.command()
async def GameStart(ctx):
    guild = ctx.message.guild
    game = games[guild]
    await game.channel.send('Beep! Beep! Beep!')

    # checks if the game has begun and send relative message
    if game.GameStarted == False:
        game.GameStarted = True
        game.gameMessage = await game.channel.send('To All Agents! \nATTENTION! \nThere is a RAT among us! Find the culprit and bring him in ASAP!')
        listOfPlayers = 'Agents: \n'
        n = 0
        character= ['0Ô∏è‚É£', '1Ô∏è‚É£' , '2Ô∏è‚É£' , '3Ô∏è‚É£' , '4Ô∏è‚É£', '5Ô∏è‚É£' , '6Ô∏è‚É£' , '7Ô∏è‚É£' , '8Ô∏è‚É£' , '9Ô∏è‚É£', 'üîü' ]
        for player in game.players.values():
            listOfPlayers += f'{n} : {player.name} \n'
            reaction = await game.gameMessage.add_reaction(character[n])
            game.votes[character[n]] = player
            n += 1

        await game.channel.send(listOfPlayers)

    else:
        await game.channel.send('The search has already begun! Continue to find the Spy!')
    



        
    


client.run('NzU0ODc2MDY1MDU4NjUyMjMx.X17HHg.eVWNrxitZs3GTY2zy9y9TIBAmOc')#recieves the token generated by discord. This token will be regenerated.
